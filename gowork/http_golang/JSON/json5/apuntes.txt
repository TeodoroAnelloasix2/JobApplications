map[string]interface{}

Sometimes you have to deal with JSON data of unknown or varying structure in Go. 
In those instances map[string]interface{} offers a flexible way to handle it without predefined structs.

Think about it: a JSON object is a key-value pair, where the key is a string and the value can be any JSON type. 

map[string]interface{} is a map where the key is a string and the value can be any Go type.

var data map[string]interface{}
jsonString := `{"name": "Alice", "age": 30, "address": {"city": "Wonderland"}}`
json.Unmarshal([]byte(jsonString), &data)
fmt.Println(data["name"])  // Output: Alice
fmt.Println(data["address"].(map[string]interface{})["city"])  // Output: Wonderland

any is an alias for interface{}
